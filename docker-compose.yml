version: "3.9"

services:
  app:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    command:
      - start
      # - --optimized
      - --spi-login-protocol-openid-connect-suppress-logout-confirmation-screen=true
      - --features=authorization,account3,account-api,admin2,scripts,token-exchange,web-authn,declarative-user-profile,step-up-authentication,recovery-codes,update-email,js-adapter,preview,impersonation,admin-api
      - --db=postgres
      - --db-url=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - --db-username=${POSTGRES_USER}
      - --db-password=${POSTGRES_PASSWORD}
    environment:
      KEYCLOAK_ADMIN: ${ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: ${APP_URL}
      KC_PROXY: "edge"
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
    expose:
      - 8080
    networks:
      - internal
      - nginx
      - monitoring
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_CPU_APP:-1}
          memory: ${LIMIT_RAM_APP:-2G}
        reservations:
          cpus: "0.5"
          memory: 256M
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${BASE_VOLUME}/postgresql:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - internal
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_CPU_DB:-1}
          memory: ${LIMIT_RAM_DB:-1G}
        reservations:
          cpus: "0.1"
          memory: 64M
  db-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    restart: always
    environment:
      DATA_SOURCE_NAME: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    expose:
      - 9187
    networks:
      - internal
      - monitoring
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_CPU_DB_EXPORTER:-0.2}
          memory: ${LIMIT_RAM_DB_EXPORTER:-128M}
        reservations:
          cpus: "0.1"
          memory: 10M

networks:
  internal:
  nginx:
    external: true
  monitoring:
    external: true
